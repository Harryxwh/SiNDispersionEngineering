switchtolayout;
deleteall;

um = 1e-6;
nm = 1e-9;

Ly_WG = 0.1*um; #height of the WG
Lz_WG = 50*um; #length of the WG

Lx_Cladding = 50*um; #length of the WG
Ly_Cladding = 2*um; #width of the WG
Lz_Cladding = 50*um; #height of the WG

Lx_Buried_Oxide = 50*um;
Ly_Buried_Oxide = 8*um;
Lz_Buried_Oxide = 50*um;

Lx_FDE = 30*um;
Ly_FDE = 10*um;

mesh_cells_x = 600;
mesh_cells_y = 200;

wavelength  = 1550*nm;

material_core = "Si3N4 (Silicon Nitride) - Luke";
material_cladding = "SiO2 (Glass) - Palik";


Lx_start    = 2*um;
Lx_end      = 3*um;
num_of_pts_Lx  = 11;
Lx_arr      = linspace(Lx_start,Lx_end,num_of_pts_Lx);


bend_radius_start = 1004*um;
gap = 5*um;


#results
neff_array  = zeros(num_of_pts_Lx);

format short;
filename = "Scanning_Lx_and_r.txt";
if(fileexists(filename)){rm(filename);}
write(filename,"Lx,n_eff");

for (Lx_idx = 1:num_of_pts_Lx)
{

    Lx_WG = Lx_arr(Lx_idx);
    ?"Lx_WG = " + num2str(Lx_WG*1e6)+" um";

    # Decide the bending radius based on the waveguide width, for a given gap
    #bend_radius = Lx_WG/2 + gap + bend_radius_start;
    bend_radius = bend_radius_start + gap/2;
    ?"bend_radius = " + num2str(bend_radius*1e6)+" um";

    switchtolayout;
    deleteall;

    #WG
    addrect;
    set("name","WG");
    set("x",Lx_WG/2 + gap/2);
    set("x span",Lx_WG);
    set("y min",0);
    set("y max",Ly_WG);
    #set("z",0);
    #set("z span",Lz_WG);
    set("override mesh order from material database",true);
    set("mesh order",2);
    set("material",material_core);

    # BOX
    addrect;
    set("name","BOX");
    set("x",0);
    set("x span",Lx_Buried_Oxide);
    set("y max",0);
    set("y min",-Ly_Buried_Oxide);
    #set("z",0);
    #set("z span",Lz_Buried_Oxide);
    set("override mesh order from material database",true);
    set("mesh order",3);
    set("material",material_cladding);

    # Cladding
    addrect;
    set("name","Cladding");
    set("x",0);
    set("x span",Lx_Cladding);
    set("y min",0);
    set("y max",Ly_Cladding);
    #set("z",0);
    #set("z span",Lz_Cladding);
    set("override mesh order from material database",true);
    set("mesh order",3);
    set("material",material_cladding);

    addfde;
    set("solver type","2D Z normal");
    set("x",0);
    set("y",0);
    set("x span",Lx_FDE);
    set("y min",-Ly_FDE/2);
    set("y max",Ly_FDE/2);
    set("x min bc","Metal");
    set("x max bc","Metal");
    set("y min bc","Metal");
    set("y max bc","Metal");
    set("define x mesh by","number of mesh cells");
    set("define y mesh by","number of mesh cells");
    set("mesh cells x",mesh_cells_x);
    set("mesh cells y",mesh_cells_y);

    set("bent waveguide", 1);
    set("bend location x", 0);
    set("bend location y", 0);
    set("bend location z", 0);
    set("bend radius",bend_radius);

    findmodes;

    mode_idx    = 1;    #fundamental mode
    neff        = pinch(getdata("FDE::data::mode"+num2str(mode_idx),"neff"));
    neff_array(Lx_idx) = real(neff);
    format long;
    ?"neff = " + num2str(real(neff));

    format long;
    neff_given_Lx = num2str(Lx_WG * 1e6)+","+ num2str(real(neff));
    write(filename,neff_given_Lx);
    ?"\n";
}
plot(Lx_arr*1e6,neff_array, "Lx (um)", "Effective Index at 1550nm");
