switchtolayout;
deleteall;

um = 1e-6;
nm = 1e-9;

#Outer Ring
Lx_WG1 = 10*um; #length of the WG1
Ly_WG1 = 550*nm; #width of the WG1
Lz_WG1 = 450*nm; #height of the WG1

#Inner Ring
Lx_WG2 = 10*um; #length of the WG2
Ly_WG2 = 630*nm; #width of the WG2
Lz_WG2 = 450*nm; #height of the WG2

gap_x = 300*nm;

Lx_Cladding = 10*um;
Ly_Cladding = 10*um;
Lz_Cladding = 10*um;

material_core = "Si3N4 (Silicon Nitride) - Phillip";

material_cladding = "SiO2 (Glass) - Palik";

Max_Mode_Idx = 5;

#Outer Ring
addrect;
set("x",-gap_x/2-Lx_WG1/2);
set("x span",Lx_WG1);
set("y",+(gap_y+Ly_WG1)/2);
set("y span",Ly_WG1);
set("z min",0);
set("z max",Lz_WG1);
set("override mesh order from material database",true);
set("mesh order",2);
set("material",material_core);

#Inner Ring
addrect;
set("x",0);
set("x span",Lx_WG2);
set("y",-(gap_y+Ly_WG2)/2);
set("y span",Ly_WG2);
set("z min",0);
set("z max",Lz_WG2);
set("override mesh order from material database",true);
set("mesh order",2);
set("material",material_core);

#Cladding
addrect;
set("x",0);
set("x span",Lx_Cladding);
set("y",0);
set("y span",Ly_Cladding);
set("z min",-Lz_Cladding);
set("z max",Lz_Cladding);
set("override mesh order from material database",true);
set("mesh order",3);
set("material",material_cladding);

addfde;
set("solver type","2D X normal");
set("x",0);
set("y",0);
set("y span",6*Ly_WG);
set("z min",-2*Lz_WG);
set("z max",3*Lz_WG);
set("y min bc","PML");
set("y max bc","PML");
set("z min bc","PML");
set("z max bc","PML");
set("mesh cells y",30);
set("mesh cells z",30);
#setnamed("FDE","bent waveguide",false);
setnamed("FDE","bent waveguide",true);
setnamed("FDE","bend radius",100*um);

addmesh;
set("name","mesh_waveguide");
set("x",0);
set("x span",Lx_WG/3);
set("y",0);
set("y span",Ly_WG);
set("z min",0);
set("z max",Lz_WG);
set("override x mesh",0);
set("override y mesh",1);
set("override z mesh",1);
set("set maximum mesh step",1);
set("dy",10*nm);
set("dz",10*nm);

Comp_name_list = {"Ex","Ey","Ez","Hx","Hy","Hz"};
#num_of_wavl_points = 5;
#wavl_vec = linspace(1.5,1.6,num_of_wavl_points);
num_of_wavl_points = 1;
wavl_vec = {1.55*um};
try{
    for(wavl_idx = 1:num_of_wavl_points){
        setnamed("FDE","wavelength",wavl_vec[wavl_idx]);
        for (mode_idx = 1:Max_Mode_Idx){
            findmodes;
            Ez = pinch(getdata("FDE::data::mode"+num2str(mode_idx),"Ex"));
            Ex = pinch(getdata("FDE::data::mode"+num2str(mode_idx),"Ey"));
            Ey = pinch(getdata("FDE::data::mode"+num2str(mode_idx),"Ez"));

            Hz = pinch(getdata("FDE::data::mode"+num2str(mode_idx),"Hx"));
            Hx = pinch(getdata("FDE::data::mode"+num2str(mode_idx),"Hy"));
            Hy = pinch(getdata("FDE::data::mode"+num2str(mode_idx),"Hz"));
            Comp_list = {Ex,Ey,Ez,Hx,Hy,Hz};
            for (j=1:6){
                format short;
                filename = "DoubleRing\Mode"+num2str(mode_idx)+"_"+Comp_name_list{j}+".txt";
                # in case the file already exists
                if(fileexists(filename)){
                    rm(filename);
                }
                format long;    # set num2str() to return 16 digits of precision
                write(filename,num2str(Comp_list{j}));
            }
        }
    }
    ?"No Error encountered";
} catch{ErrorMsg};

?ErrorMsg;


#selectmode([1,2,3]);
#select("FDE")
#set("start wavelength",1.5)
#set("start wavelength",1.6)
#set("track selected mode",true)
#set("number of points",10)
#set("number of test modes",4)

#frequencysweep;
